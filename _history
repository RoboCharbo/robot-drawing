{"entries":[{"timestamp":1757509266215,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":2573,"diffs":[[1,"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"[irG1I$eyil%)8VC*(#-\">n</variable></variables><comment x=\"17\" y=\"-186\" h=\"148.888916015625\" w=\"712.2222290039062\">Press the A button to see how the robot travels from the bottom left of the grid to the top right.  Then use the Robo Drawing blocks to design a new path for your robot to follow.  Start the robot anywhere on the grid by setting the coordinates in the Reset block.</comment><block type=\"pxt-on-start\" x=\"0\" y=\"10\"><statement name=\"HANDLER\"><block type=\"RoboDrawing_roboReset\"><field name=\"direction\">RoboDrawing.Direction.Right</field><value name=\"col\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"6\" label=\"Number\" precision=\"0\"/><field name=\"SLIDER\">0</field></shadow></value><value name=\"row\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"6\" label=\"Number\" precision=\"0\"/><field name=\"SLIDER\">6</field></shadow></value></block></statement></block><block type=\"keyonevent\" x=\"570\" y=\"0\"><field name=\"button\">controller.A</field><field name=\"event\">ControllerButtonEvent.Pressed</field><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">3</field></shadow></value><statement name=\"DO\"><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field></block></value><statement name=\"DO\"><block type=\"RoboDrawing_roboMoveForward\"/></statement><next><block type=\"RoboDrawing_roboTurn\"><field name=\"left\">RoboDrawing.TurnDirection.Left</field><next><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field></block></value><statement name=\"DO\"><block type=\"RoboDrawing_roboMoveForward\"/></statement><next><block type=\"RoboDrawing_roboTurn\"><field name=\"left\">RoboDrawing.TurnDirection.Right</field><next><block type=\"variables_change\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value></block></next></block></next></block></next></block></next></block></statement></block></next></block></statement></block></xml>"]]}]},{"type":"edited","filename":"tilemap.g.ts","patch":[{"start1":169,"length1":201,"diffs":[[1,""]]}]}]},{"timestamp":1757515604189,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":2694,"diffs":[[1,"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"[irG1I$eyil%)8VC*(#-\">n</variable></variables><comment x=\"17\" y=\"-196\" w=\"712\" h=\"148\">Press the A button to see how the robot travels from the bottom left of the grid to the top right.  Then use the Robo Drawing blocks to design a new path for your robot to follow.  Start the robot anywhere on the grid by setting the coordinates in the Reset block.</comment><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"RoboDrawing_roboReset\"><field name=\"direction\">RoboDrawing.Direction.Right</field><value name=\"col\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"6\" label=\"Number\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><value name=\"row\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"6\" label=\"Number\" precision=\"0\"></mutation><field name=\"SLIDER\">6</field></shadow></value></block></statement></block><block type=\"keyonevent\" x=\"570\" y=\"-10\"><field name=\"button\">controller.A</field><field name=\"event\">ControllerButtonEvent.Pressed</field><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">3</field></shadow></value><statement name=\"DO\"><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field></block></value><statement name=\"DO\"><block type=\"RoboDrawing_roboMoveForward\"></block></statement><next><block type=\"RoboDrawing_roboTurn\"><field name=\"left\">RoboDrawing.TurnDirection.Left</field><next><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field></block></value><statement name=\"DO\"><block type=\"RoboDrawing_roboMoveForward\"></block></statement><next><block type=\"RoboDrawing_roboTurn\"><field name=\"left\">RoboDrawing.TurnDirection.Right</field><next><block type=\"variables_change\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value></block></next></block></next></block></next></block></next></block></statement></block></next></block></statement></block></xml>"]]}]}]},{"timestamp":1757515648204,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":473,"diffs":[[1,"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"[irG1I$eyil%)8VC*(#-\">n</variable></variables><comment x=\"17\" y=\"-196\" w=\"712\" h=\"148\">Press the A button to see how the robot travels from the bottom left of the grid to the top right.  Then use the Robo Drawing blocks to design a new path for your robot to follow.  Start the robot anywhere on the grid by setting the coordinates in the Reset block.</comment><block type=\"RoboDrawing_roboMoveForward\" disabled-reasons=\"ORPHANED_BLOCK,MANUALLY_DISABLED\" x=\"-60\" y=\"-191\"></block><block type=\"keyonevent\" x=\"570\" y=\"-10\"><field name=\"button\">controller.A</field><field name=\"event\">ControllerButtonEvent.Pressed</field><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">3</field></shadow></value><statement name=\"DO\"><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field></block></value><statement name=\"DO\"><block type=\"RoboDrawing_roboMoveForward\"></block></statement><next><block type=\"RoboDrawing_roboTurn\"><field name=\"left\">RoboDrawing.TurnDirection.Left</field><next><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field></block></value><statement name=\"DO\"><block type=\"RoboDrawing_roboMoveForward\"></block></statement><next><block type=\"RoboDrawing_roboTurn\"><field name=\"left\">RoboDrawing.TurnDirection.Right</field><next><block type=\"variables_change\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value></block></next></block></next></block></next></block></next></block></statement></block></next></block></statement></block><block type=\"pxt-on-start\" x=\"40\" y=\"51\"><statement name=\"HANDLER\"><block type=\"RoboDrawing_roboReset\"><field name=\"direction\">RoboDrawing.Direction.Right</field><value name=\"col\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"6\" label=\"Number\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><value name=\"row\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"6\" label=\"Number\" precision=\"0\"></mutation><field name=\"SLIDER\">6</field></shadow></value></block></statement></block></xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":355,"diffs":[[1,"/**\n * Press the A button to see how the robot travels from the bottom left of the grid to the top right.  Then use the Robo Drawing blocks to design a new path for your robot to follow.  Start the robot anywhere on the grid by setting the coordinates in the Reset block.\n */\ncontroller.A.onEvent(ControllerButtonEvent.Pressed, function () {\n"]]},{"start1":398,"length1":53,"diffs":[[1,"        for (let index = 0; index < n; index++) {\n"]]},{"start1":561,"length1":53,"diffs":[[1,"        for (let index = 0; index < n; index++) {\n"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":230,"length1":42,"diffs":[[1,"        \"tilemap.g.ts\"\n"]]},{"start1":633,"length1":31,"diffs":[[1,"    \"preferredEditor\": \"blocksprj\"\n"]]}]},{"type":"added","filename":"main.py","value":"\"\"\"\n\nPress the A button to see how the robot travels from the bottom left of the grid to the top right.  Then use the Robo Drawing blocks to design a new path for your robot to follow.  Start the robot anywhere on the grid by setting the coordinates in the Reset block.\n\n\"\"\"\n\ndef on_a_pressed():\n    global n\n    n = 1\n    for index in range(3):\n        for index2 in range(n):\n            RoboDrawing.robo_move_forward()\n        RoboDrawing.robo_turn(RoboDrawing.TurnDirection.LEFT)\n        for index3 in range(n):\n            RoboDrawing.robo_move_forward()\n        RoboDrawing.robo_turn(RoboDrawing.TurnDirection.RIGHT)\n        n += 1\ncontroller.A.on_event(ControllerButtonEvent.PRESSED, on_a_pressed)\n\nn = 0\nRoboDrawing.robo_reset(0, 6, RoboDrawing.Direction.RIGHT)\n"}]}],"snapshots":[{"timestamp":1757509266214,"editorVersion":"2.0.56","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"[irG1I$eyil%)8VC*(#-\">n</variable></variables><comment x=\"17\" y=\"-186\" h=\"148.888916015625\" w=\"712.2222290039062\">Press the A button to see how the robot travels from the bottom left of the grid to the top right.  Then use the Robo Drawing blocks to design a new path for your robot to follow.  Start the robot anywhere on the grid by setting the coordinates in the Reset block.</comment><block type=\"pxt-on-start\" x=\"0\" y=\"10\"><statement name=\"HANDLER\"><block type=\"RoboDrawing_roboReset\"><field name=\"direction\">RoboDrawing.Direction.Right</field><value name=\"col\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"6\" label=\"Number\" precision=\"0\"/><field name=\"SLIDER\">0</field></shadow></value><value name=\"row\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"6\" label=\"Number\" precision=\"0\"/><field name=\"SLIDER\">6</field></shadow></value></block></statement></block><block type=\"keyonevent\" x=\"570\" y=\"0\"><field name=\"button\">controller.A</field><field name=\"event\">ControllerButtonEvent.Pressed</field><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">3</field></shadow></value><statement name=\"DO\"><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field></block></value><statement name=\"DO\"><block type=\"RoboDrawing_roboMoveForward\"/></statement><next><block type=\"RoboDrawing_roboTurn\"><field name=\"left\">RoboDrawing.TurnDirection.Left</field><next><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field></block></value><statement name=\"DO\"><block type=\"RoboDrawing_roboMoveForward\"/></statement><next><block type=\"RoboDrawing_roboTurn\"><field name=\"left\">RoboDrawing.TurnDirection.Right</field><next><block type=\"variables_change\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value></block></next></block></next></block></next></block></next></block></statement></block></next></block></statement></block></xml>","main.ts":"","README.md":" \n\n\n> Open this page at [https://jacobcarpenter.github.io/robot-drawing/](https://jacobcarpenter.github.io/robot-drawing/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://arcade.makecode.com/](https://arcade.makecode.com/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/jacobcarpenter/robot-drawing** and import\n\n## Edit this project ![Build status badge](https://github.com/jacobcarpenter/robot-drawing/workflows/MakeCode/badge.svg)\n\nTo edit this repository in MakeCode.\n\n* open [https://arcade.makecode.com/](https://arcade.makecode.com/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/jacobcarpenter/robot-drawing** and click import\n\n## Blocks preview\n\nThis image shows the blocks code from the last commit in master.\nThis image may take a few minutes to refresh.\n\n![A rendered view of the blocks](https://github.com/jacobcarpenter/robot-drawing/raw/master/.github/makecode/blocks.png)\n\n#### Metadata (used for search, rendering)\n\n* for PXT/arcade\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","custom.ts":"//% icon=\"\\uf201\"\n//% block=\"Robo Drawing\"\nnamespace RoboDrawing {\n    export enum Direction {\n        //% block=\"up\"\n        Up = 0,\n        //% block=\"right\"\n        Right = 1,\n        //% block=\"down\"\n        Down = 2,\n        //% block=\"left\"\n        Left = 3,\n    }\n\n    export enum TurnDirection {\n        //% block=\"left\"\n        Left,\n        //% block=\"right\"\n        Right,\n    }\n\n    const waitInterval = 300;\n    const headingProperty = 'roboHeading';\n    const roboImages = [img`\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . 5 5 . . . . . . .\n        . . . . . . . 5 5 . . . . . . .\n        . . . . . . . 5 5 . . . . . . .\n        . . . . . . 5 5 5 5 . . . . . .\n        . . . . . . 5 5 5 5 . . . . . .\n        . . . . . . 5 5 5 5 . . . . . .\n        . . . . . 5 5 5 5 5 5 . . . . .\n        . . . . . 5 5 5 5 5 5 . . . . .\n        . . . . 5 5 5 5 5 5 5 5 . . . .\n        . . . . 5 5 5 5 5 5 5 5 . . . .\n        . . . . 5 5 5 5 5 5 5 5 . . . .\n        . . . 5 5 5 5 5 5 5 5 5 5 . . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n    `,img`\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . 5 . . . . . . . . . . . . .\n        . . 5 5 5 5 . . . . . . . . . .\n        . . 5 5 5 5 5 5 . . . . . . . .\n        . . 5 5 5 5 5 5 5 5 5 . . . . .\n        . . 5 5 5 5 5 5 5 5 5 5 5 5 . .\n        . . 5 5 5 5 5 5 5 5 5 5 5 5 . .\n        . . 5 5 5 5 5 5 5 5 5 . . . . .\n        . . 5 5 5 5 5 5 . . . . . . . .\n        . . 5 5 5 5 . . . . . . . . . .\n        . . 5 . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n    `,img`\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . . 5 5 5 5 5 5 5 5 5 5 . . .\n        . . . . 5 5 5 5 5 5 5 5 . . . .\n        . . . . 5 5 5 5 5 5 5 5 . . . .\n        . . . . 5 5 5 5 5 5 5 5 . . . .\n        . . . . . 5 5 5 5 5 5 . . . . .\n        . . . . . 5 5 5 5 5 5 . . . . .\n        . . . . . . 5 5 5 5 . . . . . .\n        . . . . . . 5 5 5 5 . . . . . .\n        . . . . . . 5 5 5 5 . . . . . .\n        . . . . . . . 5 5 . . . . . . .\n        . . . . . . . 5 5 . . . . . . .\n        . . . . . . . 5 5 . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n    `,img`\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . 5 . .\n        . . . . . . . . . . 5 5 5 5 . .\n        . . . . . . . . 5 5 5 5 5 5 . .\n        . . . . . 5 5 5 5 5 5 5 5 5 . .\n        . . 5 5 5 5 5 5 5 5 5 5 5 5 . .\n        . . 5 5 5 5 5 5 5 5 5 5 5 5 . .\n        . . . . . 5 5 5 5 5 5 5 5 5 . .\n        . . . . . . . . 5 5 5 5 5 5 . .\n        . . . . . . . . . . 5 5 5 5 . .\n        . . . . . . . . . . . . . 5 . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n    `];\n\n    let robo: Sprite;\n    let cellSize = 16;\n    let gridSize = 7;\n\n    //% block=\"reset grid with robo at %col %row facing %direction\"\n    //% expandableArgumentMode=\"toggle\"\n    //% col.min=0 col.max=6 col.defl=0\n    //% row.min=0 row.max=6 row.defl=6\n    //% direction.defl=RoboDrawing.Direction.Right\n    export function roboReset(col: number, row: number, direction: Direction) {\n        if (robo) {\n            robo.destroy();\n            scene.backgroundImage().fill(0);\n        }\n\n        robo = sprites.create(roboImages[direction]);\n        robo.data[headingProperty] = direction;\n\n        let background = scene.backgroundImage();\n        const horizontalMargin = (scene.screenWidth() - gridSize * cellSize) / 2;\n        const verticalMargin = (scene.screenHeight() - gridSize * cellSize) / 2;\n\n        for (let cellEdge = 0; cellEdge <= gridSize; cellEdge++) {\n            const screenX = horizontalMargin + cellEdge * cellSize;\n            background.drawLine(screenX, verticalMargin, screenX, scene.screenHeight() - verticalMargin, 1);\n\n            const screenY = verticalMargin + cellEdge * cellSize;\n            background.drawLine(horizontalMargin, screenY, scene.screenWidth() - horizontalMargin, screenY, 1);\n        }\n\n        robo.setPosition(\n            horizontalMargin + col * cellSize + cellSize / 2,\n            verticalMargin + row * cellSize + cellSize / 2);\n        pause(waitInterval);\n    }\n\n    //% block\n    //% weight=52\n    export function roboMoveForward() {\n        const lastX = robo.x;\n        const lastY = robo.y;\n\n        switch (robo.data[headingProperty]) {\n            case Direction.Up: robo.y -= cellSize; break;\n            case Direction.Right: robo.x += cellSize; break;\n            case Direction.Down: robo.y += cellSize; break;\n            case Direction.Left: robo.x -= cellSize; break;\n        }\n\n        scene.backgroundImage().drawLine(lastX, lastY, robo.x, robo.y, 3);\n        pause(waitInterval);\n    }\n\n    //% block=\"robo turn %left\"\n    //% left.defl=RoboDrawing.TurnDirection.Left\n    //% weight=51\n    export function roboTurn(left: TurnDirection = RoboDrawing.TurnDirection.Left) {\n        turn(left);\n    }\n\n    // The following block only exists for the block toolbox;\n    // I want both directions, but easy swapping with the drop-down\n\n    //% block=\"robo turn %right\"\n    //% right.defl=RoboDrawing.TurnDirection.Right\n    export function roboTurn2(right: TurnDirection = RoboDrawing.TurnDirection.Right) {\n        turn(right);\n    }\n\n    function turn(direction: TurnDirection) {\n        switch(direction) {\n            case TurnDirection.Left:\n                robo.data[headingProperty] = (robo.data[headingProperty] - 1 + 4) % 4;\n                break;\n            case TurnDirection.Right:\n                robo.data[headingProperty] = (robo.data[headingProperty] + 1) % 4;\n                break;\n        }\n\n        updateRoboImage();\n        pause(waitInterval);\n    }\n\n    function updateRoboImage() {\n        robo.setImage(roboImages[robo.data[headingProperty] as number]);\n    }\n}","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","pxt.json":"{\n    \"name\": \"Robot Drawing\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"custom.ts\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v1.2.10\",\n        \"tag\": \"v1.2.10\",\n        \"commits\": \"https://github.com/microsoft/pxt-arcade/commits/96279205a73799cd057b50beda9ca58593067e18\",\n        \"target\": \"1.2.10\",\n        \"pxt\": \"6.2.23\",\n        \"targetId\": \"arcade\"\n    },\n    \"supportedTargets\": [\n        \"arcade\"\n    ],\n    \"preferredEditor\": \"blocksprj\"\n}\n","test.ts":"// tests go here; this will not be compiled when this package is used as an extension.\n"}},{"timestamp":1757515604189,"editorVersion":"2.0.56","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"[irG1I$eyil%)8VC*(#-\">n</variable></variables><comment x=\"17\" y=\"-196\" w=\"712\" h=\"148\">Press the A button to see how the robot travels from the bottom left of the grid to the top right.  Then use the Robo Drawing blocks to design a new path for your robot to follow.  Start the robot anywhere on the grid by setting the coordinates in the Reset block.</comment><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"RoboDrawing_roboReset\"><field name=\"direction\">RoboDrawing.Direction.Right</field><value name=\"col\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"6\" label=\"Number\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow></value><value name=\"row\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"6\" label=\"Number\" precision=\"0\"></mutation><field name=\"SLIDER\">6</field></shadow></value></block></statement></block><block type=\"keyonevent\" x=\"570\" y=\"-10\"><field name=\"button\">controller.A</field><field name=\"event\">ControllerButtonEvent.Pressed</field><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">3</field></shadow></value><statement name=\"DO\"><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field></block></value><statement name=\"DO\"><block type=\"RoboDrawing_roboMoveForward\"></block></statement><next><block type=\"RoboDrawing_roboTurn\"><field name=\"left\">RoboDrawing.TurnDirection.Left</field><next><block type=\"controls_repeat_ext\"><value name=\"TIMES\"><shadow type=\"math_whole_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field></block></value><statement name=\"DO\"><block type=\"RoboDrawing_roboMoveForward\"></block></statement><next><block type=\"RoboDrawing_roboTurn\"><field name=\"left\">RoboDrawing.TurnDirection.Right</field><next><block type=\"variables_change\"><field name=\"VAR\" id=\"[irG1I$eyil%)8VC*(#-\">n</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value></block></next></block></next></block></next></block></next></block></statement></block></next></block></statement></block></xml>","main.ts":"","README.md":" \n\n\n> Open this page at [https://jacobcarpenter.github.io/robot-drawing/](https://jacobcarpenter.github.io/robot-drawing/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://arcade.makecode.com/](https://arcade.makecode.com/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/jacobcarpenter/robot-drawing** and import\n\n## Edit this project ![Build status badge](https://github.com/jacobcarpenter/robot-drawing/workflows/MakeCode/badge.svg)\n\nTo edit this repository in MakeCode.\n\n* open [https://arcade.makecode.com/](https://arcade.makecode.com/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/jacobcarpenter/robot-drawing** and click import\n\n## Blocks preview\n\nThis image shows the blocks code from the last commit in master.\nThis image may take a few minutes to refresh.\n\n![A rendered view of the blocks](https://github.com/jacobcarpenter/robot-drawing/raw/master/.github/makecode/blocks.png)\n\n#### Metadata (used for search, rendering)\n\n* for PXT/arcade\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","custom.ts":"//% icon=\"\\uf201\"\n//% block=\"Robo Drawing\"\nnamespace RoboDrawing {\n    export enum Direction {\n        //% block=\"up\"\n        Up = 0,\n        //% block=\"right\"\n        Right = 1,\n        //% block=\"down\"\n        Down = 2,\n        //% block=\"left\"\n        Left = 3,\n    }\n\n    export enum TurnDirection {\n        //% block=\"left\"\n        Left,\n        //% block=\"right\"\n        Right,\n    }\n\n    const waitInterval = 300;\n    const headingProperty = 'roboHeading';\n    const roboImages = [img`\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . 5 5 . . . . . . .\n        . . . . . . . 5 5 . . . . . . .\n        . . . . . . . 5 5 . . . . . . .\n        . . . . . . 5 5 5 5 . . . . . .\n        . . . . . . 5 5 5 5 . . . . . .\n        . . . . . . 5 5 5 5 . . . . . .\n        . . . . . 5 5 5 5 5 5 . . . . .\n        . . . . . 5 5 5 5 5 5 . . . . .\n        . . . . 5 5 5 5 5 5 5 5 . . . .\n        . . . . 5 5 5 5 5 5 5 5 . . . .\n        . . . . 5 5 5 5 5 5 5 5 . . . .\n        . . . 5 5 5 5 5 5 5 5 5 5 . . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n    `,img`\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . 5 . . . . . . . . . . . . .\n        . . 5 5 5 5 . . . . . . . . . .\n        . . 5 5 5 5 5 5 . . . . . . . .\n        . . 5 5 5 5 5 5 5 5 5 . . . . .\n        . . 5 5 5 5 5 5 5 5 5 5 5 5 . .\n        . . 5 5 5 5 5 5 5 5 5 5 5 5 . .\n        . . 5 5 5 5 5 5 5 5 5 . . . . .\n        . . 5 5 5 5 5 5 . . . . . . . .\n        . . 5 5 5 5 . . . . . . . . . .\n        . . 5 . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n    `,img`\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . . 5 5 5 5 5 5 5 5 5 5 . . .\n        . . . . 5 5 5 5 5 5 5 5 . . . .\n        . . . . 5 5 5 5 5 5 5 5 . . . .\n        . . . . 5 5 5 5 5 5 5 5 . . . .\n        . . . . . 5 5 5 5 5 5 . . . . .\n        . . . . . 5 5 5 5 5 5 . . . . .\n        . . . . . . 5 5 5 5 . . . . . .\n        . . . . . . 5 5 5 5 . . . . . .\n        . . . . . . 5 5 5 5 . . . . . .\n        . . . . . . . 5 5 . . . . . . .\n        . . . . . . . 5 5 . . . . . . .\n        . . . . . . . 5 5 . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n    `,img`\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . 5 . .\n        . . . . . . . . . . 5 5 5 5 . .\n        . . . . . . . . 5 5 5 5 5 5 . .\n        . . . . . 5 5 5 5 5 5 5 5 5 . .\n        . . 5 5 5 5 5 5 5 5 5 5 5 5 . .\n        . . 5 5 5 5 5 5 5 5 5 5 5 5 . .\n        . . . . . 5 5 5 5 5 5 5 5 5 . .\n        . . . . . . . . 5 5 5 5 5 5 . .\n        . . . . . . . . . . 5 5 5 5 . .\n        . . . . . . . . . . . . . 5 . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n        . . . . . . . . . . . . . . . .\n    `];\n\n    let robo: Sprite;\n    let cellSize = 16;\n    let gridSize = 7;\n\n    //% block=\"reset grid with robo at %col %row facing %direction\"\n    //% expandableArgumentMode=\"toggle\"\n    //% col.min=0 col.max=6 col.defl=0\n    //% row.min=0 row.max=6 row.defl=6\n    //% direction.defl=RoboDrawing.Direction.Right\n    export function roboReset(col: number, row: number, direction: Direction) {\n        if (robo) {\n            robo.destroy();\n            scene.backgroundImage().fill(0);\n        }\n\n        robo = sprites.create(roboImages[direction]);\n        robo.data[headingProperty] = direction;\n\n        let background = scene.backgroundImage();\n        const horizontalMargin = (scene.screenWidth() - gridSize * cellSize) / 2;\n        const verticalMargin = (scene.screenHeight() - gridSize * cellSize) / 2;\n\n        for (let cellEdge = 0; cellEdge <= gridSize; cellEdge++) {\n            const screenX = horizontalMargin + cellEdge * cellSize;\n            background.drawLine(screenX, verticalMargin, screenX, scene.screenHeight() - verticalMargin, 1);\n\n            const screenY = verticalMargin + cellEdge * cellSize;\n            background.drawLine(horizontalMargin, screenY, scene.screenWidth() - horizontalMargin, screenY, 1);\n        }\n\n        robo.setPosition(\n            horizontalMargin + col * cellSize + cellSize / 2,\n            verticalMargin + row * cellSize + cellSize / 2);\n        pause(waitInterval);\n    }\n\n    //% block\n    //% weight=52\n    export function roboMoveForward() {\n        const lastX = robo.x;\n        const lastY = robo.y;\n\n        switch (robo.data[headingProperty]) {\n            case Direction.Up: robo.y -= cellSize; break;\n            case Direction.Right: robo.x += cellSize; break;\n            case Direction.Down: robo.y += cellSize; break;\n            case Direction.Left: robo.x -= cellSize; break;\n        }\n\n        scene.backgroundImage().drawLine(lastX, lastY, robo.x, robo.y, 3);\n        pause(waitInterval);\n    }\n\n    //% block=\"robo turn %left\"\n    //% left.defl=RoboDrawing.TurnDirection.Left\n    //% weight=51\n    export function roboTurn(left: TurnDirection = RoboDrawing.TurnDirection.Left) {\n        turn(left);\n    }\n\n    // The following block only exists for the block toolbox;\n    // I want both directions, but easy swapping with the drop-down\n\n    //% block=\"robo turn %right\"\n    //% right.defl=RoboDrawing.TurnDirection.Right\n    export function roboTurn2(right: TurnDirection = RoboDrawing.TurnDirection.Right) {\n        turn(right);\n    }\n\n    function turn(direction: TurnDirection) {\n        switch(direction) {\n            case TurnDirection.Left:\n                robo.data[headingProperty] = (robo.data[headingProperty] - 1 + 4) % 4;\n                break;\n            case TurnDirection.Right:\n                robo.data[headingProperty] = (robo.data[headingProperty] + 1) % 4;\n                break;\n        }\n\n        updateRoboImage();\n        pause(waitInterval);\n    }\n\n    function updateRoboImage() {\n        robo.setImage(roboImages[robo.data[headingProperty] as number]);\n    }\n}","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","pxt.json":"{\n    \"name\": \"Robot Drawing\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"custom.ts\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v1.2.10\",\n        \"tag\": \"v1.2.10\",\n        \"commits\": \"https://github.com/microsoft/pxt-arcade/commits/96279205a73799cd057b50beda9ca58593067e18\",\n        \"target\": \"1.2.10\",\n        \"pxt\": \"6.2.23\",\n        \"targetId\": \"arcade\"\n    },\n    \"supportedTargets\": [\n        \"arcade\"\n    ],\n    \"preferredEditor\": \"blocksprj\"\n}\n","test.ts":"// tests go here; this will not be compiled when this package is used as an extension.\n"}}],"shares":[],"lastSaveTime":1757516006581}